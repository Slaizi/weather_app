version: '3.9'

networks:
  app-networks:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-cache:
    driver: local

services:
  db:
    image: postgres:17.2-alpine
    container_name: postgres_weather_app
    hostname: postgres
    networks:
      - app-networks
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT_MAPPING}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}'"]
      interval: 30s
      timeout: 10s
      retries: 5
  cache:
    image: redis:7.4-alpine
    container_name: redis_weather_app
    hostname: redis
    networks:
      - app-networks
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT_MAPPING}
    volumes:
      - redis-cache:/var/lib/redis
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    restart: unless-stopped